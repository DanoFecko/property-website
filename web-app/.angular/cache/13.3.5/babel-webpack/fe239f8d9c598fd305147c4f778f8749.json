{"ast":null,"code":"import { Observable } from 'rxjs';\nexport const mimetype = control => {\n  const file = control.value;\n  const fileReader = new FileReader();\n  return new Observable(observer => {\n    fileReader.addEventListener('loadend', () => {\n      const arr = new Uint8Array(fileReader.result).subarray(0, 4);\n      let header = '';\n      let isValid = false;\n\n      for (const i of arr) {\n        header += arr[i].toString(16);\n\n        switch (header) {\n          case '89504e47':\n            isValid = true;\n            break;\n\n          case 'ffd8ffe0':\n          case 'ffd8ffe1':\n          case 'ffd8ffe2':\n          case 'ffd8ffe3':\n          case 'ffd8ffe8':\n            isValid = true;\n            break;\n\n          default:\n            isValid = false; // Or you can use the blob.type as fallback\n\n            break;\n        }\n\n        if (isValid) {\n          observer.next(null);\n        } else {\n          observer.next({\n            invalidMimeType: true\n          });\n        }\n\n        observer.complete();\n      }\n    });\n    fileReader.readAsArrayBuffer(file);\n  });\n};","map":null,"metadata":{},"sourceType":"module"}